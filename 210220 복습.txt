코딩의 과정은 코드작성 ->컴파일러->이진화->exe같은 파일 생성

#: 전처리 지시자
전처리기는 프로그램 컴파일시 컴파일 직전에 실행되는 프로그램 즉, 코드작성 후 컴파일 전에 실행됨.
#include를 하면 <>과 "" 두개의 종류 헤더파일이옴 <>는 기본제공하는 것 ""는 오픈소스나 사용자가 작성한것
#include<iostream>
using namespace std;
//iostream안에있는 네임스페이스 std를 사용

*헤더파일은 메뉴판 같은것으로 어떤기능이 들어있는지 알려줌 헤더파일 선언 후에 그안에 있는 기능 사용가능 
 선인이 되지 않았다면 그 기능을 사용 불가능 

declaration(선언 헤더 파일) definition(cpp) 헤더는 그냥 어떤게 있다고 선언 상세 내용이나 기능등은 cpp파일에서 설명해준다.

namespace는 공간이다 using 이라는 지시자로 불러올수 있고 using namespace 000으로 뒤에 사용할 네임스페이스 파일(?)
불러온다.

각각 다른 네임스페이스를 선언한다면 그안에 변수의 내용이나 함수가 같더라도 중복되지 않고 사용 가능하다.
단, 그전에 네임스페이스를 선언하지 않는다면 사용불가



ram에는 4가지의 영역이 있다. 

stack(int a=0;을 선언시 a에 해당하는 공간이 저장되는 곳 이안에 0이라는 숫자가 저장된다, 
자동으로 사용하는 임시 메모리영역으로 함수호출시 지역변수와 매개변수가 저장되녹 호출이 완료되면 사라진다.)
hip
static
text (코드영역, 실행할 프로그램의 코드가 저장됨 제어문,함수,상수들이 저장)

//변수: 특정 값을 저장하는 메모리공간, 메모리공간을 확보하여 이름을 짓고 데이터 저장을 할수있는 공간
//자료형: 어떤 종류의 데이터를 저장할 건지 크기는 얼마나 되는지 알려줌
//지역변수:블록 안에서만 즉 한 함수 안에서만 사용가능한 변수
//매개변수: 함수등에서 사용되는 전달 값을 받는 변수
//인수: 전달되는 값