#include<iostream>
using namespace std;
#define ____________________________________________________________________________ 	cout << "=================================================================" << endl;


void main()
{
/*
* 변수란? -메모리에 정보를 저장할수 있는 공간
*
* 변수 이름 규칙
* - 알파벳과 숫자로 구성이 됨
* - 숫자가 맨 앞에 올수 없다.
* 
* -변수 이름엔 특수문자가 올수 없다.
* -'_'는 허용한다.
* 
* -변수명에 공백이 있어서도 안됨
* 
* -변수명은 대소문자를 구분한다.
* 
* -변수명은 용도에 맞게 이름을 지어주어야 한다!!!!!!!
* 
* -같은 지역 '{}'안에는 같은이름의 변수를 다시 선언 할 수 없어
* - '{}':스코프
*/
	//int a1 = 0;
	//int a1* = 0;
	//int _a = 0;
	//int a_0 = 1;
	//int people_hw = 0;
	//int a = 0;
	//int a = 100;
	//int A = 20;
	//cout << a << endl;
	//cout << A << endl;
	____________________________________________________________________________
	/*
	* 2. 연산자
	* 연산자: 연산결과를 반환한다.
	* 피연산자: 연산을 받는 주체
	* 단항 연산자
	* 이항 연산자
	* 삼항 연산자
	* 
	* 종류: 산술 연산자, sizeof, 대입, 관계, 논리, 비트단위, 증감, 축약 연산자
	* 
	* 
	*/
	____________________________________________________________________________	//산술 연산자 (+,-,*,/,%)
	/*int iA = 5, iB = 2;
	cout << iA / iB << endl;
	cout << iA % iB << endl;*/

	//우선 순위를 소괄호()로 명시할 수 있다!
	cout << 2 + 4 * 2 + 2 << endl;
	cout << (2 + 4) * (2 + 2) << endl;

	____________________________________________________________________________
	/*
	* sizeof 연산자(단항)
	* 피연산자의 메모리 크기를 byte 단위로 반환을 한다.
	*/
	bool bOol = true;
	char cHar = 'A';
	short sHort = 10;
	int iNt = 20;
	float fLoat = 3.14f;
	double dOuble = 3.1415;

	cout << "bOol의 크기" << sizeof(bOol) << endl;
	cout << "cHar의 크기" << sizeof(cHar) << endl;
	cout << "sHort의 크기" << sizeof(sHort) << endl;
	cout << "iNt의 크기" << sizeof(iNt) << endl;
	cout << "fLoat의 크기" << sizeof(fLoat) << endl;
	cout << "dOuble의 크기" << sizeof(dOuble) << endl;
	____________________________________________________________________________

		/*
		* 대입 연산자
		* 이항 연산자
		*/
	/*int iA = 0;
	int iB = 10;
	iA = iB;
	iA = iB = 100;*/

	____________________________________________________________________________

	/*
	* 6. 관계 연산자
	* <, >, <=, >=, ==, !=
	* 두 피연산자의 관계를 참과 거짓으로 반환한다.
	*/
	/*int iA = 0;
	int iB = 10;
	int iC = 10;
	cout << (iA < iB) << endl;
	cout << (iA > iB) << endl;

	cout << (iB <= iC) << endl;
	cout << (iB >= iC) << endl;

	cout << (iB == iC) << endl;
	cout << (iB != iC) << endl;*/

	____________________________________________________________________________

		/*
		* 7. 논리 연산자
		* &&(and), ||(or)-> 이항 연산자
		* !(not)-> 단항 연산자
		*/
		// &&(and) 두 조건이 참이면 참을 반환, 하나라도 거짓이면 0을 반환
	//cout << (true && true) << endl;//true
	//cout << (true && false) << endl;//false
	//cout << (false && true) << endl;//false
	//cout << (false && false) << endl;//false

	//int iA = 0,iB=100, iC=200;
	//false && (iA = 999);

	//cout << (iA < iB < iC) << endl;
	//cout << ((iA < iB) && (iB<iC)) << endl;

	//||(or) 연산자
	// 두 조건 중 하나라도 참이면 참을 반환
	cout << (true || false) << endl;//true
	cout << (false || true) << endl;//true
	cout << (false || false) << endl;//false

	//!(not) 연산자
	// 논리 부정
	!true;//false
	!false;// true

	____________________________________________________________________________

		/*
		* 비트 단위 연산자
		* 피연산자가 오로지 정수 자료형이어야만 한다.
		*/

		//&(and),|(or),~(not),^(xor)

		short nA = 10 & 8;
	//0000 0000 0000 1010
	//0000 0000 0000 1000
	//               1000
	cout << nA << endl;

	nA = 10 | 8;
	cout << nA << endl;

	//^,xor
	//비교하는 두 비트열 두개 같으면 0, 다르면 1
	nA = 10 ^ 8;
	//0000 0000 0000 1010
	//0000 0000 0000 1000
	//0000 0000 0000 0010

	cout << nA << endl;

	//~(not)
	//피연산자의 비트열을 모두 반전시킨다.
	nA = ~1+1;
	//0000 0000 0000 0001
	//1111 1111 1111 1110
	cout << nA << endl;

	//+=,-= *= /= 
}